@import url("https://fonts.googleapis.com/css2?family=Alata&family=Candal&display=swap");
$darkblue: #202040;
$darkerblue: #101020;
$lightblue: #c0cfff;
$kindagrey: #555588;

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

a {
    outline: none;
    color: $lightblue;
    text-decoration: none;
}

a:active {
    color: lighten($lightblue, 50%);
}

@keyframes quick-highlight {
    0% {
        color: #4400bb;
        text-shadow: 0.2em 0em white;
    }
    100% {
        color: $lightblue;
        text-shadow: 0em 0em white;
    }
}

#logo:target {
    animation: quick-highlight 0.5s;
}

ul {
    list-style: none;
}

body {
    background: $darkblue url("../../img/noise.png");
    transition: background-color 1s;
    min-height: 90vh;
}

#wrapper {
    max-width: 1024px;
    min-height: 90vh;
    display: grid;
    grid-template-rows: auto 1fr auto;
    padding: 0 4.4vw 0 4.4vw;
    margin: 3vw auto 0;
    position: relative;
}

#logo {
    width: 15%;
    outline: none;
    display: inline-block;
    font-size: 1.5em;
    font-family: "Candal", sans-serif;
    color: $lightblue;
    position: relative;
    user-select: none;
    #hadd {
        display: inline-block;
    }
    #i {
        display: inline-block;
        transform: rotate(180deg);
        position: absolute;
        bottom: -0.13em;
        transition: transform 0.5s, bottom 0.5s;
    }
    #me {
        white-space: pre;
        display: inline-block;
        margin-left: 0;
        position: absolute;
        transition: transform 0.5s, margin-left 0.5s, opacity 0.5s;
    }
}

#logo:hover {
    #i {
        transform: rotate(0deg);
        bottom: 0em;
        transition: transform 0.5s, bottom 0.5s;
    }
    #me {
        transform: rotate(30deg);
        margin-left: 1em;
        opacity: 0%;
        transition: transform 0.5s, margin-left 0.5s, opacity 0.5s;
    }
}

.dark {
    display: inline-block;
    float: right;
}

main {
    margin-top: 11vh;
}

footer > p {
    text-align: center;
    font-size: 0.7em;
    opacity: 0.6;
}

p {
    font-family: "Alata", sans-serif;
    color: $kindagrey;
    font-size: 0.8em;
    margin-bottom: 1.4vh;
}

.container {
    font-family: "Alata", sans-serif;
    width: 80%;
    margin: auto;
    display: grid;
    grid-template: 1fr 1fr 1fr / auto auto auto;
    grid-row-gap: 8vh;
    justify-items: center;
    color: $lightblue;
    @for $i from 1 through 9 {
        div:nth-child(#{$i}) {
            animation: float#{$i} 1s ease-in-out infinite;
        }
    }
    div {
        text-align: center;
        max-width: 11vw;
        opacity: 0.4;
        transition: opacity 0.2s;
        h2 {
            text-transform: uppercase;
            font-size: 1.2em;
            margin-bottom: 0.2em;
        }
        span {
            text-decoration: underline;
            text-decoration-style: dotted;
            text-underline-offset: 0.15em;
            margin: auto 0.2em;
            font-size: 0.9em;
            opacity: 0.6;
            cursor: pointer;
            &:hover {
                opacity: 0.8;
            }
        }
        &:hover {
            transition: opacity 0.2s;
            opacity: 0.8;
        }
    }
}

@for $i from 1 through 9 {
    @keyframes float#{$i} {
        $keyframesCount: 10;
        @for $j from 1 through $keyframesCount {
            $percentage: percentage($j * (1 / $keyframesCount));
            @if ($percentage == 0%) {
                #{$percentage} {
                    transform: translateY(0px);
                }
            } @else if ($percentage == 100%) {
                #{$percentage} {
                    transform: translateY(0px);
                }
            } @else if $j <= $keyframesCount/2 {
                #{$percentage} {
                    @if ($i % 2 == 1) {
                        transform: translateY((-1 * $j)/4 + px);
                    } @else {
                        transform: translateY($j/4 + px);
                    }
                }
            } @else {
                #{$percentage} {
                    @if ($i % 2 == 1) {
                        transform: translateY(
                            (-1 * ($keyframesCount - $j))/4 + px
                        );
                    } @else {
                        transform: translateY(($keyframesCount - $j)/4 + px);
                    }
                }
            }
        }
    }
}

.toggle {
    --size: 1.15rem;
    margin-top: 0.5em;

    appearance: none;
    outline: none;
    cursor: pointer;
    background-color: rgba($color: lighten($lightblue, 50%), $alpha: 0.06);
    width: var(--size);
    height: var(--size);
    box-shadow: calc(var(--size) * -0) calc(var(--size) * 0) 0.6em 0.5em
            rgba($color: lighten($lightblue, 50%), $alpha: 0.06),
        inset calc(var(--size) * 0.33) calc(var(--size) * -0.25) 0;
    border-radius: 999px;
    color: $lightblue;

    transition: all 500ms;

    &:checked {
        --size: 1.3rem;
        --ray-size: calc(var(--size) * -0.4);
        --offset-orthogonal: calc(var(--size) * 0.65);
        --offset-diagonal: calc(var(--size) * 0.45);

        transform: scale(0.75);
        //color: hsl(50, 80%, 50%);
        color: lighten($lightblue, 50%);
        box-shadow: 0 0 2em 0.2em
                rgba($color: lighten($lightblue, 50%), $alpha: 0.7),
            inset 0 0 0 var(--size),
            calc(var(--offset-orthogonal) * -1) 0 0 var(--ray-size),
            var(--offset-orthogonal) 0 0 var(--ray-size),
            0 calc(var(--offset-orthogonal) * -1) 0 var(--ray-size),
            0 var(--offset-orthogonal) 0 var(--ray-size),
            calc(var(--offset-diagonal) * -1) calc(var(--offset-diagonal) * -1)
                0 var(--ray-size),
            var(--offset-diagonal) var(--offset-diagonal) 0 var(--ray-size),
            calc(var(--offset-diagonal) * -1) var(--offset-diagonal) 0
                var(--ray-size),
            var(--offset-diagonal) calc(var(--offset-diagonal) * -1) 0
                var(--ray-size);
    }
}

